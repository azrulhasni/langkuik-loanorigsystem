{
  "version": 3,
  "sources": ["external:@vaadin/vaadin-themable-mixin", "../../@vaadin/vaadin-element-mixin/vaadin-element-mixin.js", "../../@vaadin/vaadin-element-mixin/vaadin-dir-helper.js", "../../@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js"],
  "sourcesContent": ["export * from \"@vaadin/vaadin-themable-mixin\"", "import { idlePeriod } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { enqueueDebouncer } from '@polymer/polymer/lib/utils/flush.js';\n\nimport { DirMixin } from './vaadin-dir-mixin.js';\nimport { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\nif (!window.Vaadin) {\n  window['Vaadin'] = {};\n}\n\n/**\n * Array of Vaadin custom element classes that have been finalized.\n */\nwindow['Vaadin'].registrations = window.Vaadin.registrations || [];\n\n// Use the hack to prevent polymer-modulizer from converting to exports\nwindow['Vaadin'].developmentModeCallback = window.Vaadin.developmentModeCallback || {};\nwindow['Vaadin'].developmentModeCallback['vaadin-usage-statistics'] = function() {\n  if (usageStatistics) {\n    usageStatistics();\n  }\n};\n\nlet statsJob;\n\nconst registered = new Set();\n\n/**\n * @polymerMixin\n * @mixes DirMixin\n */\nexport const ElementMixin = superClass => class VaadinElementMixin extends DirMixin(superClass) {\n  /** @protected */\n  static finalize() {\n    super.finalize();\n\n    const {is} = this;\n\n    // Registers a class prototype for telemetry purposes.\n    if (is && !registered.has(is)) {\n      window.Vaadin.registrations.push(this);\n      registered.add(is);\n\n      if (window.Vaadin.developmentModeCallback) {\n        statsJob = Debouncer.debounce(statsJob,\n          idlePeriod, () => {\n            window.Vaadin.developmentModeCallback['vaadin-usage-statistics']();\n          }\n        );\n        enqueueDebouncer(statsJob);\n      }\n    }\n  }\n\n  constructor() {\n    super();\n    if (document.doctype === null) {\n      console.warn(\n        'Vaadin components require the \"standards mode\" declaration. Please add <!DOCTYPE html> to the HTML document.'\n      );\n    }\n  }\n};\n", "/**\n@license\nCopyright (c) 2020 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * Helper that provides a set of functions for RTL.\n */\nclass DirHelper {\n  /**\n   * Get the scroll type in the current browser view.\n   *\n   * @return {string} the scroll type. Possible values are `default|reverse|negative`\n   */\n  static detectScrollType() {\n    const dummy = document.createElement('div');\n    dummy.textContent = 'ABCD';\n    dummy.dir = 'rtl';\n    dummy.style.fontSize = '14px';\n    dummy.style.width = '4px';\n    dummy.style.height = '1px';\n    dummy.style.position = 'absolute';\n    dummy.style.top = '-1000px';\n    dummy.style.overflow = 'scroll';\n    document.body.appendChild(dummy);\n\n    let cachedType = 'reverse';\n    if (dummy.scrollLeft > 0) {\n      cachedType = 'default';\n    } else {\n      dummy.scrollLeft = 2;\n      if (dummy.scrollLeft < 2) {\n        cachedType = 'negative';\n      }\n    }\n    document.body.removeChild(dummy);\n    return cachedType;\n  }\n\n  /**\n   * Get the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @return {number} the scrollLeft value.\n  */\n  static getNormalizedScrollLeft(scrollType, direction, element) {\n    const {scrollLeft} = element;\n    if (direction !== 'rtl' || !scrollType) {\n      return scrollLeft;\n    }\n\n    switch (scrollType) {\n      case 'negative':\n        return element.scrollWidth - element.clientWidth + scrollLeft;\n      case 'reverse':\n        return element.scrollWidth - element.clientWidth - scrollLeft;\n    }\n    return scrollLeft;\n  }\n\n  /**\n   * Set the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @param {number} scrollLeft the scrollLeft value to be set\n   */\n  static setNormalizedScrollLeft(scrollType, direction, element, scrollLeft) {\n    if (direction !== 'rtl' || !scrollType) {\n      element.scrollLeft = scrollLeft;\n      return;\n    }\n\n    switch (scrollType) {\n      case 'negative':\n        element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n        break;\n      case 'reverse':\n        element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n        break;\n      default:\n        element.scrollLeft = scrollLeft;\n        break;\n    }\n  }\n}\n\nexport { DirHelper };\n", "import { DirHelper } from './vaadin-dir-helper.js';\n/**\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\n */\nconst directionSubscribers = [];\nconst directionUpdater = function() {\n  const documentDir = getDocumentDir();\n  directionSubscribers.forEach(element => {\n    alignDirs(element, documentDir);\n  });\n};\n\nlet scrollType;\n\nconst directionObserver = new MutationObserver(directionUpdater);\ndirectionObserver.observe(document.documentElement, {attributes: true, attributeFilter: ['dir']});\n\nconst alignDirs = function(element, documentDir) {\n  if (documentDir) {\n    element.setAttribute('dir', documentDir);\n  } else {\n    element.removeAttribute('dir');\n  }\n};\n\nconst getDocumentDir = function() {\n  return document.documentElement.getAttribute('dir');\n};\n\n/**\n * @polymerMixin\n */\nexport const DirMixin = superClass => class VaadinDirMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * @protected\n       */\n      dir: {\n        type: String,\n        readOnly: true\n      }\n    };\n  }\n\n  /** @protected */\n  static finalize() {\n    super.finalize();\n\n    if (!scrollType) {\n      scrollType = DirHelper.detectScrollType();\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.hasAttribute('dir')) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir());\n    }\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name !== 'dir') {\n      return;\n    }\n\n    // New value equals to the document direction and the element is not subscribed to the changes\n    const newValueEqlDocDir = newValue === getDocumentDir() && directionSubscribers.indexOf(this) === -1;\n    // Value was emptied and the element is not subscribed to the changes\n    const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\n    // New value is different and the old equals to document direction and the element is not subscribed to the changes\n    const newDiffValue = newValue !== getDocumentDir() && oldValue === getDocumentDir();\n\n    if (newValueEqlDocDir || newValueEmptied) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir());\n    } else if (newDiffValue) {\n      this.__subscribe(false);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__subscribe(false);\n    this.removeAttribute('dir');\n  }\n\n  /** @private */\n  __subscribe(push = true) {\n    if (push) {\n      directionSubscribers.indexOf(this) === -1 &&\n        directionSubscribers.push(this);\n    } else {\n      directionSubscribers.indexOf(this) > -1 &&\n        directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\n    }\n  }\n\n  /**\n   * @param {Element} element\n   * @return {number}\n   * @protected\n   */\n  __getNormalizedScrollLeft(element) {\n    return DirHelper.getNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {number} scrollLeft\n   * @protected\n   */\n  __setNormalizedScrollLeft(element, scrollLeft) {\n    return DirHelper.setNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element, scrollLeft);\n  }\n};\n"],
  "mappings": "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",
  "names": ["scrollType"]
}
