import {
  ElementMixin,
  vaadin_themable_mixin_exports
} from "./chunk-VM7WIMYX.js";
import {
  __export,
  __reExport
} from "./chunk-KKNQZGBY.js";

// node_modules/@vaadin-component-factory/vcf-toggle-button/theme/lumo/vcf-toggle-button-styles.js
import { html } from "@polymer/polymer/polymer-element.js";
import "@vaadin/vaadin-lumo-styles/color.js";
var template = html`
  <dom-module id="vcf-toggle-custom-styles" theme-for="vaadin-checkbox">
    <template>
      <style>
        :host(.toggle-button) [part='checkbox'] {
          width: calc(1.5em * 2 - 12px);
          height: 1.5em;
          border-radius: 0.75em;
          background-color: var(--lumo-contrast-40pct);
          margin: 0;
        }

        :host(.toggle-button[disabled]) [part='checkbox'] {
          background-color: var(--lumo-contrast-20pct);
        }

        :host(.toggle-button) [part='checkbox']::after {
          width: calc(1.5em - 4px);
          height: calc(1.5em - 4px);
          border-radius: 50%;
          background-color: var(--lumo-primary-contrast-color);
          border: none;
          top: 2px;
          left: 2px;
          transform: none;
          opacity: 1;
          transition: transform 0.2s ease;
        }

        :host(.toggle-button[checked]) [part='checkbox'] {
          background-color: var(--lumo-primary-color);
        }

        :host(.toggle-button[checked][disabled]) [part='checkbox'] {
          background-color: var(--lumo-primary-color-50pct);
        }

        :host(.toggle-button[active]) [part='checkbox'] {
          transform: none;
        }

        :host(.toggle-button[checked]) [part='checkbox']::after {
          transform: translate(calc(100% - 8px));
        }
      </style>
    </template>
  </dom-module>
`;
document.head.appendChild(template.content);
var theme = document.createElement("dom-module");
theme.id = "vcf-toggle-button-lumo";
theme.setAttribute("theme-for", "vcf-toggle-button");
theme.innerHTML = `
    <template>
      <style include="lumo-color">
        :host {}
      </style>
    </template>
  `;
theme.register(theme.id);

// node_modules/@vaadin-component-factory/vcf-toggle-button/src/vcf-toggle-button.js
import { html as html2, PolymerElement } from "@polymer/polymer/polymer-element";

// node_modules/@vaadin/vaadin-checkbox/vaadin-checkbox.js
var vaadin_checkbox_exports2 = {};
__export(vaadin_checkbox_exports2, {
  CheckboxElement: () => CheckboxElement
});

// node_modules/@vaadin/vaadin-checkbox/theme/lumo/vaadin-checkbox.js
import "@vaadin/checkbox/theme/lumo/vaadin-checkbox.js";

// node_modules/@vaadin/vaadin-checkbox/src/vaadin-checkbox.js
var vaadin_checkbox_exports = {};
__export(vaadin_checkbox_exports, {
  CheckboxElement: () => CheckboxElement
});
__reExport(vaadin_checkbox_exports, vaadin_checkbox_star);
import { Checkbox } from "@vaadin/checkbox/src/vaadin-checkbox.js";
import * as vaadin_checkbox_star from "@vaadin/checkbox/src/vaadin-checkbox.js";
var CheckboxElement = Checkbox;
console.warn('WARNING: Since Vaadin 23.2, "@vaadin/vaadin-checkbox" is deprecated. Use "@vaadin/checkbox" instead.');

// node_modules/@vaadin/vaadin-checkbox/vaadin-checkbox.js
__reExport(vaadin_checkbox_exports2, vaadin_checkbox_exports);

// node_modules/@vaadin-component-factory/vcf-toggle-button/src/vcf-toggle-button.js
var VcfToggleButton = class extends ElementMixin((0, vaadin_themable_mixin_exports.ThemableMixin)(PolymerElement)) {
  static get template() {
    return html2`
      <style>
        :host {
          display: inline-flex;
          align-items: center;
        }
        [part='label'] {
          margin-right: 0.25em;
        }
      </style>
      <span part="label">[[label]]</span>
      <vaadin-checkbox
        class="toggle-button"
        checked="{{checked}}"
        value="{{value}}"
        on-change="_handleChange"
        disabled="{{disabled}}"
      ></vaadin-checkbox>
    `;
  }
  static get is() {
    return "vcf-toggle-button";
  }
  static get properties() {
    return {
      checked: {
        type: Boolean,
        value: false,
        notify: true,
        reflectToAttribute: true
      },
      disabled: {
        type: Boolean,
        value: false
      },
      value: {
        type: String,
        value: "on"
      },
      label: String
    };
  }
  connectedCallback() {
    super.connectedCallback();
    this.setAttribute("role", "switch");
  }
  _handleChange() {
    this.dispatchEvent(
      new CustomEvent("change", {
        detail: {
          checked: this.checked
        }
      })
    );
  }
};
customElements.define(VcfToggleButton.is, VcfToggleButton);
window.Vaadin.VcfToggleButton = VcfToggleButton;
/**
 * @license
 * Copyright (c) 2017 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin-component-factory_vcf-toggle-button.js.map
